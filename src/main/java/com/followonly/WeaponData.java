package com.followonly;

import java.util.HashSet;
import java.util.Set;
import net.runelite.api.ItemID;

public class WeaponData {

    private static final Set<Integer> RANGED_WEAPON_IDS = new HashSet<>();
    private static final Set<Integer> MAGIC_WEAPON_IDS = new HashSet<>();

    static {
        // Populate RANGED_WEAPON_IDS with unique item IDs
        RANGED_WEAPON_IDS.add(ItemID._3RD_AGE_BOW);
        RANGED_WEAPON_IDS.add(ItemID.ATLATL_DART_29852);
        RANGED_WEAPON_IDS.add(ItemID.ATLATL_DART);
        RANGED_WEAPON_IDS.add(ItemID.BONE_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_INACTIVE);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_27187);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25869);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25884);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25886);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25888);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25890);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25892);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25894);
        RANGED_WEAPON_IDS.add(ItemID.BOW_OF_FAERDHINEN_C_25896);
        RANGED_WEAPON_IDS.add(ItemID.COMP_OGRE_BOW);
        RANGED_WEAPON_IDS.add(ItemID.CORRUPTED_BOW_ATTUNED);
        RANGED_WEAPON_IDS.add(ItemID.CORRUPTED_BOW_BASIC);
        RANGED_WEAPON_IDS.add(ItemID.CORRUPTED_BOW_PERFECTED);
        RANGED_WEAPON_IDS.add(ItemID.CORRUPTED_DARK_BOW);
        RANGED_WEAPON_IDS.add(ItemID.CORRUPTED_TWISTED_BOW);
        RANGED_WEAPON_IDS.add(ItemID.CRAWS_BOW);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_110);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_110_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_210);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_210_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_310);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_310_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_410);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_410_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_510);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_510_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_610);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_610_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_710);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_710_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_810);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_810_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_910);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_910_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_24123);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_ATTUNED);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_BASIC);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_FULL);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_FULL_I);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_INACTIVE);
        RANGED_WEAPON_IDS.add(ItemID.CRYSTAL_BOW_PERFECTED);
        RANGED_WEAPON_IDS.add(ItemID.NEW_CRYSTAL_BOW);
        RANGED_WEAPON_IDS.add(ItemID.NEW_CRYSTAL_BOW_4213);
        RANGED_WEAPON_IDS.add(ItemID.NEW_CRYSTAL_BOW_16888);
        RANGED_WEAPON_IDS.add(ItemID.NEW_CRYSTAL_BOW_I);
        RANGED_WEAPON_IDS.add(ItemID.NEW_CRYSTAL_BOW_I_16889);
        RANGED_WEAPON_IDS.add(ItemID.CURSED_GOBLIN_BOW);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_12765);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_12766);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_12767);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_12768);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_20408);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_BH);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW_DEADMAN);
        RANGED_WEAPON_IDS.add(ItemID.DARK_BOW);
        RANGED_WEAPON_IDS.add(ItemID.ECLIPSE_ATLATL);
        RANGED_WEAPON_IDS.add(ItemID.ECLIPSE_ATLATL_29851);
        RANGED_WEAPON_IDS.add(ItemID.LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.MAGIC_COMP_BOW);
        RANGED_WEAPON_IDS.add(ItemID.MAGIC_LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.MAGIC_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.MAGIC_SHORTBOW_20558);
        RANGED_WEAPON_IDS.add(ItemID.MAGIC_SHORTBOW_I);
        RANGED_WEAPON_IDS.add(ItemID.MAPLE_LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.MAPLE_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.MAPLE_SHORTBOW_20403);
        RANGED_WEAPON_IDS.add(ItemID.OAK_LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.OAK_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.OGRE_BOW);
        RANGED_WEAPON_IDS.add(ItemID.RAIN_BOW);
        RANGED_WEAPON_IDS.add(ItemID.SCORCHING_BOW);
        RANGED_WEAPON_IDS.add(ItemID.SEERCULL);
        RANGED_WEAPON_IDS.add(ItemID.SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.SIGNED_OAK_BOW);
        RANGED_WEAPON_IDS.add(ItemID.STARTER_BOW);
        RANGED_WEAPON_IDS.add(ItemID.STARTER_BOW_28555);
        RANGED_WEAPON_IDS.add(ItemID.TRAINING_BOW);
        RANGED_WEAPON_IDS.add(ItemID.TWISTED_BOW);
        RANGED_WEAPON_IDS.add(ItemID.VENATOR_BOW);
        RANGED_WEAPON_IDS.add(ItemID.VENATOR_BOW_UNCHARGED);
        RANGED_WEAPON_IDS.add(ItemID.WEBWEAVER_BOW);
        RANGED_WEAPON_IDS.add(ItemID.WILLOW_COMP_BOW);
        RANGED_WEAPON_IDS.add(ItemID.WILLOW_LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.WILLOW_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.YEW_COMP_BOW);
        RANGED_WEAPON_IDS.add(ItemID.YEW_LONGBOW);
        RANGED_WEAPON_IDS.add(ItemID.YEW_SHORTBOW);
        RANGED_WEAPON_IDS.add(ItemID.YEW_SHORTBOW_20401);
        RANGED_WEAPON_IDS.add(ItemID.ZARYTE_BOW);
        RANGED_WEAPON_IDS.add(ItemID.ZARYTE_BOW_26239);
        RANGED_WEAPON_IDS.add(ItemID.BLACK_SALAMANDER);
        RANGED_WEAPON_IDS.add(ItemID.ORANGE_SALAMANDER);
        RANGED_WEAPON_IDS.add(ItemID.RED_SALAMANDER);
        RANGED_WEAPON_IDS.add(ItemID.SWAMP_LIZARD);
        RANGED_WEAPON_IDS.add(ItemID.TECU_SALAMANDER);
        RANGED_WEAPON_IDS.add(ItemID.BLACK_CHINCHOMPA);
        RANGED_WEAPON_IDS.add(ItemID.CHINCHOMPA);
        RANGED_WEAPON_IDS.add(ItemID.RED_CHINCHOMPA);
        RANGED_WEAPON_IDS.add(ItemID.TOXIC_BLOWPIPE);
        // ... continue adding items without duplicates ...

        // Populate MAGIC_WEAPON_IDS with unique item IDs
        MAGIC_WEAPON_IDS.add(ItemID.ACCURSED_SCEPTRE);
        MAGIC_WEAPON_IDS.add(ItemID.ACCURSED_SCEPTRE_A);
        MAGIC_WEAPON_IDS.add(ItemID.ACCURSED_SCEPTRE_AU);
        MAGIC_WEAPON_IDS.add(ItemID.ACCURSED_SCEPTRE_U);
        MAGIC_WEAPON_IDS.add(ItemID.BONE_STAFF);
        // ... continue adding items without duplicates ...
    }


    // Method to check if a weapon is a ranged weapon
    public static boolean isRangedWeapon(int itemId) {
        return RANGED_WEAPON_IDS.contains(itemId);
    }

    // Method to check if a weapon is a magic weapon
    public static boolean isMagicWeapon(int itemId) {
        return MAGIC_WEAPON_IDS.contains(itemId);
    }
}

